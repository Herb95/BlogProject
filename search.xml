<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Lua初识]]></title>
    <url>%2Fposts%2Fundefined%2F</url>
    <content type="text"><![CDATA[Lua初识Lua 数据类型8种基本类型:nil :表示无效值(条件表达式代表false)boolean:布尔 包含两个值:true和falsenumber: 表示双精度类型的实浮点数string: 字符串有””或者’’表示userdata: 任意存储中的C数据结构function: Lua或C编写的函数thread: 执行独立线路,执行协同程序table: 关联数据(associative arrays),索引是数字或者字符串,table的创建通过”构造表达式”来完成,最简单构造表达式{}(创建一个空表)nil1234nil:空 print(type(x)==&quot;nil&quot;) true print(typeI(x)==nil) false 注: type(X)==nil 结果为 false 的原因是因为 type(type(X))==stringnumber1234567number类型--双精度类型(默认类型修改luaconf.h文中定义)例如:print(type(2))print(type(2.2))print(type(0.2))print(type(2e+1))print(type(2.1231231465e-06))string1234567891011用 [[]] 表示一块字符串例如:html = [[ &lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt; &lt;a href=&quot;https://herb95.github.io/&quot;&gt;Graywolf 博客&lt;/a&gt; &lt;/body&gt; &lt;/html&gt;]]print(html)运算123456789101112数字,字符串上进行运算print(&quot;3&quot;+9)print(&quot;3&quot;+&quot;9&quot;)print(&quot;3+9&quot;)print(&quot;-2e2&quot;*9)print(&quot;e&quot;+2)结果:12123+9-1800error...注:字符串连接使用是 ..注:用#来计算字符串的长度# 运用123456len=&quot;herb95.github.io/&quot;print(#len)print(#&quot;herb95.github.io/&quot;)结果:1717table1234567891011tab1 =&#123;&#125;-- 直接初始化tab2 =&#123;&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;&#125;for k,v in pairs(tab2) do print(k.. &quot;:&quot; .. v)end结果:1:12:23:34:4注:lua表默认初始索引一般以1开始table不会固定长度大小,有新数据添加table长度会自动增长,没初始的table都是nilfunction1234567891011-- function 函数是被看做事&quot;第一类值(First-Class Value),可存变量&quot;:例如:function add(a,b) return a+bendprint(add(10,20))add2 = addprint(add(10,30))结果:3040function 可以做匿名函数(anonymous function)的方式参数传递:123456789101112131415function testFun(tab,fun) for k,v in pairs(tab) do print(fun(k,v)) endendtab1 = &#123;k1= &quot;1&quot;,k2 = &quot;3&quot;&#125;;testFun(tab1,function(k,v) return k..&quot;=&quot;..vend)结果:k1=1k2=3thread线程lua中最主要的线程是协同程序(coroutine),跟线程(thread)差不多,拥有自己独立的栈、 局部变量和指令指针，可与其他协同程序共享全局变量线程和协程的区别：线程可以多个运行；协程任意时刻只能运行一个，并且处于运行状态的协程只有被挂起(suspend)时才会暂停userdata (自定义类型)是一种用户自定义数据,表示一种有应用程序或C/C++语言库创建类型,将任意C/C++任意数据类型的数据(通常是struct和指针) 存到lua变量中调用]]></content>
      <tags>
        <tag>Lua Study</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[部署个人博客方法]]></title>
    <url>%2Fposts%2F4441%2F</url>
    <content type="text"><![CDATA[部署个人博客命令npm+hexonpm install hexo-cli -g #安装Hexonpm install hexo-deployer-git –save #部署hexo到git page的deployerhexo init #初始化hexo generate #简化 hexo g 生成hexo server #简化 hexo s 启动服务器配置githubcd ~/.ssh #查看本机是否存在SSH Key###存在clip &lt;~/.ssh/id_rsa.pub #复制公钥到 clipboard登录github 设置秘钥ssh -T git@github.com #测试秘钥不存在ssh-keygen -t rsa -C “your_email@example.com“弹出界面直接回车:默认文件进行存储输入特定的文件名输入密码(可不输入直接回车)确认密码执行存在那一步创建库选择设置的SSH 并复制打开本地hexo项目 编辑 _config.yml修改1234deploy:type: git repo: &quot;复制的SSH&quot;branch: master在Hexo 文件下执行hexo g -d报错 not fount:git重新安装npm install hexo-deployer-git –save再次执行 hexo g -d浏览器输入github生成的外链 https://xxxx.github.io/美化自己博客主题下载网址:https://hexo.io克隆主题到theme目录修改配置文件 _config.yml12345678910111213141516171819202122232425262728 theme: hexo-theme-chan``` 返回项目根目录 执行语句- hexo g- hexo s- http://localhost:4000/### 部署到Github- hexo clean #清除缓存- hexo g -d### Hexo编写文章1.发表新篇- hexo n &quot;NewPage&quot;- 生成地址在 \项目\Hexo\source_post\NewPage.md- 推送服务器上- hexo g- hexo d - 注: 合并命令 hexo d -g### 域名关联- hexo\source\ 创建 CNAME 内容是你的域名- 提交 hexo g -d- 修改 DNS``` DNSf1g1ns2.dnspod.net f1g1ns1.dnspod.net域名解析打开https://www.dnspod.cn/ 注册账户添加域名添加记录1.主记录为@2.www记录值相同 博客主页对应ip获取ip ping “github博客地址”等生效]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fposts%2F16107%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new "My New Post"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment]]></content>
  </entry>
</search>
